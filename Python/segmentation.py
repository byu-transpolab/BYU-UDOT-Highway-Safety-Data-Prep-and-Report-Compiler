# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-03-17 17:20:36
"""
import arcpy

def Model():  # Model

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"C:\Users\samyan\Documents\ArcGIS\Projects\test_CAMS-segmentation\test_CAMS-segmentation.gdb", workspace=r"C:\Users\samyan\Documents\ArcGIS\Projects\test_CAMS-segmentation\test_CAMS-segmentation.gdb"):
        CAMS_routes_shp = "C:\\Users\\samyan\\Documents\\ArcGIS\\Projects\\test_CAMS-segmentation\\data\\CAMS_routes\\CAMS_routes.shp"
        CAMS_shp = "C:\\Users\\samyan\\Documents\\ArcGIS\\Projects\\test_CAMS-segmentation\\data\\CAMS\\CAMS.shp"

        # Process: Create Routes (Create Routes) (lr)
        CAMS_routes_CreateRoutes = "C:\\Users\\samyan\\Documents\\ArcGIS\\Projects\\test_CAMS-segmentation\\test_CAMS-segmentation.gdb\\CAMS_routes_CreateRoutes"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\samyan\Documents\ArcGIS\Projects\test_CAMS-segmentation\test_CAMS-segmentation.gdb", workspace=r"C:\Users\samyan\Documents\ArcGIS\Projects\test_CAMS-segmentation\test_CAMS-segmentation.gdb"):
            arcpy.lr.CreateRoutes(in_line_features=CAMS_routes_shp, route_id_field="LABEL", out_feature_class=CAMS_routes_CreateRoutes, measure_source="TWO_FIELDS", from_measure_field="BEG_MIL", to_measure_field="END_MIL", coordinate_priority="UPPER_LEFT", measure_factor=1, measure_offset=0, ignore_gaps="IGNORE", build_index="INDEX")

        # Process: Make Route Event Layer (Make Route Event Layer) (lr)
        CAMS_Events = "CAMS Events1"
        with arcpy.EnvManager(scratchWorkspace=r"C:\Users\samyan\Documents\ArcGIS\Projects\test_CAMS-segmentation\test_CAMS-segmentation.gdb", workspace=r"C:\Users\samyan\Documents\ArcGIS\Projects\test_CAMS-segmentation\test_CAMS-segmentation.gdb"):
            arcpy.lr.MakeRouteEventLayer(in_routes=CAMS_routes_CreateRoutes, route_id_field="LABEL", in_table=CAMS_shp, in_event_properties="LABEL Line BEG_MILEP END_MILEP", out_layer=CAMS_Events, offset_field="", add_error_field="ERROR_FIELD", add_angle_field="NO_ANGLE_FIELD", angle_type="NORMAL", complement_angle="ANGLE", offset_direction="LEFT", point_event_type="POINT")

if __name__ == '__main__':
    Model()
